{"version":3,"sources":["utils/MathUtils.js","data/DateTime.js","utils/DateUtils.js","components/EventForm.js","components/EventList.js","components/Controls.js","containers/Container.js","App.js","serviceWorker.js","index.js"],"names":["pad","num","size","s","String","length","DateTime","currentdate","Date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","dateFormat","containerStyle","zIndex","position","top","left","transform","display","flexDirection","alignItems","backgroundColor","padding","color","borderRadius","boxShadow","border","formTitleStyle","fontWeight","props","useState","hasSelectedEvent","selectedEvent","dtstart","selectedDTStart","handleDTStartChange","dtend","selectedDTEnd","handleDTEndChange","isDisabled","setDisabled","frmTitle","useRef","window","addEventListener","handleEsc","evt","keyCode","removeEventListener","onFormCancel","handleTextChange","document","getElementById","value","inputStyle","minWidth","style","id","formTitle","utils","DateFnsUtils","DateTimePicker","label","onChange","dt","format","defaultValue","type","TextField","inputRef","title","location","description","marginTop","Button","variant","onClick","marginRight","event","uid","onFormSubmit","disabled","overflowY","width","events","sort","a","b","map","node","index","fmtDTStart","fmtDTEnd","key","ListItem","button","ListItemIcon","fontSize","ListItemText","primary","Fragment","Typography","component","secondary","right","startIcon","onRemoveItem","formVisible","className","marginBottom","onEditItem","List","justifyContent","onShowFormClick","height","Container","state","handleShowFormClick","bind","handleFormCancel","handleFormSubmit","handleRemoveItem","handleEditItem","this","setState","eventIndex","findIndex","obj","push","array","slice","removeEvent","currentDateTime","getCurrentDateTime","Controls","EventForm","EventList","Component","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6f171b8.chunk.js","sourcesContent":["export const pad = (num, size) => {\n  var s = String(num);\n  while (s.length < (size || 2)) {\n    s = \"0\" + s;\n  }\n  return s;\n};\n","import { pad } from \"../utils/MathUtils\";\n\nexport default class DateTime {\n  getCurrentDateTime() {\n    const currentdate = new Date();\n    const currentdatetime =\n      pad(currentdate.getMonth() + 1, 2) +\n      \"/\" +\n      pad(currentdate.getDate(), 2) +\n      \"/\" +\n      currentdate.getFullYear() +\n      \" \" +\n      pad(currentdate.getHours(), 2) +\n      \":\" +\n      pad(currentdate.getMinutes(), 2) +\n      \":\" +\n      pad(currentdate.getSeconds(), 2);\n    return currentdatetime;\n  }\n}\n","export const dateFormat = \"MMMM do, yyyy h:mm a\";\n","import React, { useRef, useState } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { dateFormat } from \"../utils/DateUtils\";\n\nconst containerStyle = {\n  zIndex: 10,\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translateX(-50%) translateY(-50%)\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  backgroundColor: \"rgba(204, 204, 204)\",\n  padding: \"0em 1em 1em\",\n  color: \"#111111\",\n  borderRadius: \"1em\",\n  boxShadow: \"#000000 3px 3px 4px 1px\",\n  border: \"1px #000000 solid\"\n};\n\nconst formTitleStyle = {\n  fontWeight: \"bold\"\n};\n\nexport default props => {\n  const [selectedDTStart, handleDTStartChange] = useState(\n    props.hasSelectedEvent ? props.selectedEvent.dtstart : null\n  );\n  const [selectedDTEnd, handleDTEndChange] = useState(\n    props.hasSelectedEvent ? props.selectedEvent.dtend : null\n  );\n  const [isDisabled, setDisabled] = useState(true);\n  //const dateFormat = \"MM/dd/yyyy HH:mm\";\n  //const dateFormat = \"MMMM do, yyyy h:mm a\";\n  const frmTitle = useRef(null);\n  /*\n  useEffect(() => {\n    debugger;\n  }, [props, frmTitle]);\n  */\n  const handleEsc = evt => {\n    if (evt.keyCode === 27) {\n      window.removeEventListener(\"keydown\", handleEsc);\n      props.onFormCancel();\n    }\n  };\n  window.addEventListener(\"keydown\", handleEsc);\n  const handleSubmit = () => {\n    const event = {\n      dtstart: new Date(document.getElementById(\"dtstart\").value),\n      dtend: new Date(document.getElementById(\"dtend\").value),\n      title: document.getElementById(\"event_title\").value,\n      location: document.getElementById(\"event_location\").value,\n      description: document.getElementById(\"event_description\").value,\n      uid: props.hasSelectedEvent ? props.selectedEvent.uid : +new Date()\n    };\n    props.onFormSubmit(event);\n  };\n  const handleTextChange = () => {\n    setDisabled(\n      document.getElementById(\"dtstart\").value === \"\" ||\n        document.getElementById(\"dtend\").value === \"\" ||\n        document.getElementById(\"event_title\").value === \"\" ||\n        document.getElementById(\"event_location\").value === \"\" ||\n        document.getElementById(\"event_description\").value === \"\"\n    );\n  };\n  const inputStyle = {\n    minWidth: \"14em\"\n  };\n  return (\n    <div style={containerStyle} id=\"appointmentform\">\n      <h3 style={formTitleStyle}>{props.formTitle}</h3>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n          id=\"dtstart_formatted\"\n          label=\"Start\"\n          value={selectedDTStart}\n          onChange={dt => {\n            handleDTStartChange(dt);\n            handleTextChange();\n          }}\n          format={dateFormat}\n          style={inputStyle}\n        />\n        <DateTimePicker\n          id=\"dtend_formatted\"\n          label=\"End\"\n          value={selectedDTEnd}\n          onChange={dt => {\n            handleDTEndChange(dt);\n            handleTextChange();\n          }}\n          format={dateFormat}\n          style={inputStyle}\n        />\n      </MuiPickersUtilsProvider>\n      <input\n        defaultValue={selectedDTStart === null ? \"\" : selectedDTStart}\n        id=\"dtstart\"\n        type=\"hidden\"\n      />\n      <input\n        defaultValue={selectedDTEnd === null ? \"\" : selectedDTEnd}\n        id=\"dtend\"\n        type=\"hidden\"\n      />\n      <TextField\n        id=\"event_title\"\n        label=\"Title\"\n        onChange={handleTextChange}\n        style={inputStyle}\n        inputRef={frmTitle}\n        defaultValue={props.hasSelectedEvent ? props.selectedEvent.title : null}\n      />\n      <TextField\n        id=\"event_location\"\n        label=\"Location\"\n        onChange={handleTextChange}\n        style={inputStyle}\n        defaultValue={\n          props.hasSelectedEvent ? props.selectedEvent.location : null\n        }\n      />\n      <TextField\n        id=\"event_description\"\n        label=\"Description\"\n        onChange={handleTextChange}\n        style={inputStyle}\n        defaultValue={\n          props.hasSelectedEvent ? props.selectedEvent.description : null\n        }\n      />\n      <div style={{ marginTop: \"2em\", minWidth: \"12em\" }}>\n        <Button\n          variant=\"contained\"\n          onClick={props.onFormCancel}\n          style={{ marginRight: \"1em\" }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmit}\n          id=\"formSubmit\"\n          disabled={isDisabled}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { format } from \"date-fns\";\nimport { dateFormat } from \"../utils/DateUtils\";\n\nconst containerStyle = {\n  overflowY: \"scroll\",\n  width: \"100%\"\n};\n\nexport default props => {\n  const events = props.events\n    .sort((a, b) => {\n      return new Date(a.dtstart) > new Date(b.dtend) ? 1 : -1;\n    })\n    .map((node, index) => {\n      const fmtDTStart = format(new Date(node.dtstart), dateFormat);\n      const fmtDTEnd = format(new Date(node.dtend), dateFormat);\n      return (\n        <div key={index}>\n          <ListItem button alignItems=\"flex-start\">\n            <ListItemIcon>\n              <EventIcon style={{ color: \"#FFFF00\", fontSize: \"2em\" }} />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"p\"\n                    //variant=\"body2\"\n                    style={{ color: \"#FFFFFF\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\", marginRight: \".5em\" }}>\n                      From:\n                    </span>\n                    {fmtDTStart}\n                  </Typography>\n                  <Typography\n                    component=\"p\"\n                    //variant=\"body2\"\n                    style={{ color: \"#FFFFFF\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\", marginRight: \".5em\" }}>\n                      To:\n                    </span>\n                    {fmtDTEnd}\n                  </Typography>\n                  <Typography\n                    component=\"p\"\n                    //variant=\"body2\"\n                    style={{ color: \"#FFFFFF\", fontWeight: \"bold\" }}\n                  >\n                    {node.title}\n                  </Typography>\n                  <Typography\n                    component=\"p\"\n                    //variant=\"body2\"\n                    style={{ color: \"#FFFFFF\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\", marginRight: \".5em\" }}>\n                      Location:\n                    </span>\n                    {node.location}\n                  </Typography>\n                </React.Fragment>\n              }\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    //variant=\"body2\"\n                    style={{ color: \"#FFFFFF\", fontSize: \"1em\" }}\n                  >\n                    {node.description}\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n            <div\n              style={{\n                position: \"absolute\",\n                right: \"2em\",\n                top: \"1em\",\n                display: \"flex\",\n                flexDirection: \"column\"\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<RemoveIcon />}\n                onClick={() => props.onRemoveItem(node.uid)}\n                title=\"Cancel (Delete) Appointment\"\n                disabled={props.formVisible}\n                className=\"deletebutton\"\n                style={{ marginBottom: \"1em\" }}\n              >\n                <span className=\"buttontext\">Cancel (Delete)</span>\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<EditIcon />}\n                onClick={() => props.onEditItem(node)}\n                title=\"Edit Appointment\"\n                disabled={props.formVisible}\n                className=\"editbutton\"\n              >\n                <span className=\"buttontext\">Edit</span>\n              </Button>\n            </div>\n          </ListItem>\n        </div>\n      );\n    });\n  return (\n    <div style={containerStyle}>\n      <List>{events}</List>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst containerStyle = {\n  backgroundColor: \"#cccccc\",\n  color: \"#000000\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontWeight: \"bold\",\n  fontSize: \"1.5em\",\n  justifyContent: \"space-around\",\n  padding: \"0.5em 1em\",\n  width: \"100%\"\n};\n\nexport default props => {\n  return (\n    <div style={containerStyle} id=\"titlebar\">\n      <div>Appointment Scheduler</div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={props.onShowFormClick}\n        title={props.formVisible ? `Hide Form` : `Show Form`}\n        disabled={props.formVisible}\n      >\n        Add Appointment\n      </Button>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport DateTime from \"../data/DateTime\";\nimport EventForm from \"../components/EventForm\";\nimport EventList from \"../components/EventList\";\nimport Controls from \"../components/Controls\";\n\nconst style = {\n  backgroundColor: \"rgb(93,93,93)\",\n  color: \"#ccc\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100vh\",\n  padding: \"0em 1em\"\n};\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dt: \"\",\n      formVisible: false,\n      hasSelectedEvent: false,\n      selectedEvent: {},\n      events: [\n        {\n          uid: 1578710655009,\n          dtstart: new Date(\"09/01/2020 23:00\"),\n          dtend: new Date(\"09/01/2020 23:45\"),\n          title: \"Doctor's Appointment\",\n          location: \"San Diego\",\n          description: \"My annual physical exam\"\n        },\n        {\n          uid: 1578710655010,\n          dtstart: new Date(\"09/15/2020 17:15\"),\n          dtend: new Date(\"09/15/2020 19:15\"),\n          title: \"Dinner Date\",\n          location: \"San Diego\",\n          description: \"Dinner with Jocelyn\"\n        },\n        {\n          uid: 1578710655011,\n          dtstart: new Date(\"7/15/2020 17:15\"),\n          dtend: new Date(\"7/15/2020 19:15\"),\n          title: \"Dinner Date\",\n          location: \"San Diego\",\n          description: \"Dinner with Jocelyn\"\n        },\n        {\n          uid: 1578710655005,\n          dtstart: new Date(\"5/15/2020 17:15\"),\n          dtend: new Date(\"5/15/2020 19:15\"),\n          title: \"Birthday Party\",\n          location: \"New York\",\n          description: \"Ellen's Birthday Party\"\n        }\n      ]\n    };\n    this.handleShowFormClick = this.handleShowFormClick.bind(this);\n    this.handleFormCancel = this.handleFormCancel.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleRemoveItem = this.handleRemoveItem.bind(this);\n    this.handleEditItem = this.handleEditItem.bind(this);\n  }\n  handleShowFormClick() {\n    this.setState({\n      formVisible: !this.state.formVisible\n    });\n  }\n  handleFormCancel() {\n    this.setState({\n      formVisible: false,\n      hasSelectedEvent: false,\n      selectedEvent: {}\n    });\n  }\n  handleFormSubmit(event) {\n    let events = this.state.events;\n    const eventIndex = events.findIndex(obj => {\n      return obj.uid === event.uid;\n    });\n    if (eventIndex === -1) {\n      events.push(event);\n    } else {\n      events[eventIndex] = event;\n    }\n    this.setState({\n      events: events,\n      formVisible: false\n    });\n  }\n  removeEvent(array, uid) {\n    const index = array.findIndex(obj => {\n      return obj.uid === uid;\n    });\n    return index >= 0\n      ? [...array.slice(0, index), ...array.slice(index + 1)]\n      : array;\n  }\n  handleRemoveItem(uid) {\n    const events = this.removeEvent(this.state.events, uid);\n    this.setState({ events: events });\n  }\n  handleEditItem(node) {\n    this.setState({\n      selectedEvent: node,\n      hasSelectedEvent: true,\n      formVisible: true\n    });\n  }\n  componentDidMount() {\n    const dt = new DateTime();\n    const currentDateTime = dt.getCurrentDateTime();\n    this.setState({\n      dt: currentDateTime\n    });\n  }\n  render() {\n    return (\n      <div id={this.props.id} style={style}>\n        <Controls\n          onShowFormClick={this.handleShowFormClick}\n          formVisible={this.state.formVisible}\n        />\n        {this.state.formVisible ? (\n          <EventForm\n            formVisible={this.state.formVisible}\n            formTitle=\"Schedule an Event\"\n            onFormCancel={this.handleFormCancel}\n            onFormSubmit={this.handleFormSubmit}\n            selectedEvent={this.state.selectedEvent}\n            hasSelectedEvent={this.state.hasSelectedEvent}\n          />\n        ) : null}\n        <EventList\n          events={this.state.events}\n          onRemoveItem={this.handleRemoveItem}\n          onEditItem={this.handleEditItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"./containers/Container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container id=\"container\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}